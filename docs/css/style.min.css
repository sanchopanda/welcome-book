/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.color-orange{color:#df793f}@-webkit-keyframes fade-in{from{opacity:0;-webkit-transform:translateY(-2rem);transform:translateY(-2rem)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes fade-in{from{opacity:0;-webkit-transform:translateY(-2rem);transform:translateY(-2rem)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}a{text-decoration:none}.h1{text-transform:uppercase;font-size:10rem;font-weight:600}.h3{font-size:6rem;font-weight:600}.text-default,p{font-size:3.6rem;font-weight:400}.text-default-small{font-size:2.8rem}.text-small{font-size:2.4rem}.italic{font-style:italic}.pr-100{padding-right:13rem}.mb-auto{margin-bottom:auto}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{font:normal normal 3.6rem Helvetica;background:#1a1f23;margin:0;color:#fff}img{max-width:100%}.container{padding:0 16px;margin:0 auto}@media (min-width:768px){.container{padding:0 40px}}.page{padding:14.4rem 7.2rem 15.4rem 15.4rem;min-height:100vh;height:50vw}.page:not(.page--static){display:none}.page.active{display:-webkit-box;display:flex;-webkit-animation:fade-in .5s ease-in-out;animation:fade-in .5s ease-in-out}.page .container{display:-webkit-box;display:flex}.page__left,.page__right{width:50%;padding-right:22.4rem;padding-top:25.6rem;padding-bottom:23rem}.page__content{border-top:.4rem solid #fff;height:100%}.page__content{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.nav-arrows{display:-webkit-box;display:flex;position:absolute;z-index:1000;bottom:0;right:38rem}.nav-arrows__arrow{background:#df793f;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;width:18rem;height:14.4rem;padding:0;border:none;cursor:pointer}.nav-arrows__arrow:focus{outline:0}.nav-arrows__arrow svg{width:5.2rem;height:5.2rem;pointer-events:none}.nav-arrows__arrow--next svg{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.logo{display:-webkit-box;display:flex;position:absolute;top:14.4rem;left:14.4rem}.logo__img{width:10.9rem;height:10.9rem;margin-right:4.8rem}.logo__img svg{width:100%;height:100%}.logo__text{width:-webkit-min-content;width:-moz-min-content;width:min-content;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.page-control{display:-webkit-box;display:flex;position:absolute;width:50%;padding-left:4rem;bottom:11.4rem;right:0;z-index:1000}.page-control__progress{background:#df793f;position:absolute;display:block;width:0;height:1rem;top:0;left:0;z-index:1000;-webkit-transition:width .5s ease-in-out;transition:width .5s ease-in-out}.active .page-control__progress{width:100%}.page-control__item{background:0 0;border:none;margin:0;padding:0;width:auto;overflow:visible;text-align:inherit;outline:0;cursor:pointer;color:inherit;font:inherit;line-height:normal;-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;-webkit-appearance:none;width:36.8rem;height:23rem;margin-right:8rem;padding-top:3rem;position:relative}.page-control__item::-moz-focus-inner{border:0;padding:0}.page-control__item::before{background:#fff;position:absolute;content:"";display:block;width:100%;height:1rem;top:0;left:0}.page-control__number{display:block;margin-bottom:2.4rem}.page-control__number,.page-control__text{pointer-events:none}.page-welcome{background:url(../img/bg/welcome-bg.jpg) no-repeat right top/auto 100%}.copyright{position:absolute;bottom:14.4rem;left:14.4rem;-webkit-transform:translateY(-.7rem);transform:translateY(-.7rem);z-index:1000}.bottom-gradient{position:absolute;width:100%;height:38.5rem;bottom:0;z-index:900;background:-webkit-gradient(linear,left top,left bottom,from(rgba(26,31,35,0)),color-stop(50%,#1a1f23));background:linear-gradient(to bottom,rgba(26,31,35,0) 0,#1a1f23 50%)}.steps__list{list-style:none;padding-left:0;margin-top:0;margin-bottom:0;display:-webkit-box;display:flex}.step{cursor:pointer;width:16.66%}.step__number{position:relative;padding-top:2rem;padding-bottom:2rem;pointer-events:none}.step__number::before{background:currentColor;position:absolute;content:"";width:100%;height:.4rem;top:0}.step__number::after{background:currentColor;position:absolute;content:"";width:100%;height:.4rem;bottom:0;left:0}.step__des{display:none;pointer-events:none}.step.active .step__number{color:#df793f}.step.active .step__des{display:block;padding-right:3.2rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
